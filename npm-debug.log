0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish', './' ]
2 info using npm@2.1.6
3 info using node@v0.10.32
4 verbose publish [ './' ]
5 silly cache add args [ './', null ]
6 verbose cache add spec ./
7 silly cache add parsed spec { raw: './',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: './',
7 silly cache add   spec: '/Applications/MAMP/htdocs/backbone-view-mock',
7 silly cache add   type: 'directory' }
8 verbose tar pack [ '/Users/callumrimmer/.npm/rbmv/0.0.5/package.tgz',
8 verbose tar pack   '/Applications/MAMP/htdocs/backbone-view-mock' ]
9 verbose tarball /Users/callumrimmer/.npm/rbmv/0.0.5/package.tgz
10 verbose folder /Applications/MAMP/htdocs/backbone-view-mock
11 info prepublish rbmv@0.0.5
12 verbose addLocalTarball adding from inside cache /Users/callumrimmer/.npm/rbmv/0.0.5/package.tgz
13 silly cache afterAdd rbmv@0.0.5
14 verbose afterAdd /Users/callumrimmer/.npm/rbmv/0.0.5/package/package.json not in flight; writing
15 verbose afterAdd /Users/callumrimmer/.npm/rbmv/0.0.5/package/package.json written
16 silly publish { name: 'rbmv',
16 silly publish   description: 'Mocks requirejs dependencies for backbone views and returns an instantiated backbone view with all methods public for unit testing',
16 silly publish   keywords: [ 'require', 'mock', 'backbone' ],
16 silly publish   dependencies: { fs: '*' },
16 silly publish   author: { name: 'Callum Rimmer', email: 'callum@deadtrendy.co.uk' },
16 silly publish   repository:
16 silly publish    { type: 'git',
16 silly publish      url: 'https://github.com/caljrimmer/require-backbone-view-mock.git' },
16 silly publish   main: 'src/require-mock.js',
16 silly publish   version: '0.0.5',
16 silly publish   license: 'MIT',
16 silly publish   readme: '# RBMV\n\nRBMV is a dependency injector for require.js users to make Backbone views easy to unit test.\n\n## Installation\n\n```\nnpm install rbmv\n```\n\n## API\n\n### constructor\n\nFirst you have to require RBMV. The rest of the documentation will assume you already loaded RBMV as a module dependency.\n\n#### Default Configuration\n\n```javascript\n  var rbmv = require("rbmv");\n```\n\n### rbmv(url,dependencies)\n \nwithout defined dependencies  \n               \n```javascript\nvar rbmv = require("rbmv"); \nvar mockedView = rbmv(__dirname + "path/to/view");\n```\n\nwith defined dependencies\n\n```javascript\nvar rbmv = require("rbmv"); \n\nvar mockedView = rbmv(__dirname + "path/to/view",{\n   _ : require("path/to/underscore"),\n   custom : {\n     method : function(arg){\n       return args;\n     }  \n   } \n});\n``` \n\nDependencies are optional. If any dependencies are missing then rbmv creates dummy objects with an extend method. \n\n### Full Example  \n        \nBackbone View with requirejs module dependencies\n\n```javascript\ndefine([\n  "modules/common/views/baseview",\n  "modules/common/utils",\n  "templates/list"\n  "underscore"\n  ],\n  function (BaseView, utils, list, _) {\n\n  return BaseView.extend({\n\n    template: _.template(list),\n\n    initialize : function () {},\n\n\tcontrollerParse : function(data){\n\t\t_.each(data,function(v,k){\n\t\t\tv.looped = true;\n\t\t});\n\t\treturn data;\n\t},\n\t\n\trender :function(){\n\t\tthis.$el.html(this.template(this.controllerParse(this.collection.toJSON())))\n\t}\n\t  \n});\n``` \n\nIn this view, you would like to test the method controllerParse. You want to instantiate the view without worrying about the dependencies. This view is only dependent on underscore and the template to instantiate. We pass in a mock template and underscore.\n\n\n```javascript\nvar rbmv = require("rbmv"); \nvar mockedView = rbmv(__dirname + "path/to/view",{ \n  list : "<div></div>",  \n   _ : require("underscore")\n});                        \n\nvar mockData = [{name:\'one\'},{name:\'two\'}];\nvar result = mockedView.controllerParse(mockData);\n//result is [{name:\'one\',looped:true},{name:\'two\',looped:true}]\n\n``` \n\nYou can use rbmv to create a view as a testable object and have access to all the defined methods within the view. Note that we injected underscore and the template as a dependencies with the same name as the arguments in the view i.e. _ and list   \n    \n### Credit \n\nI have used the underscore extend method so thanks to the underscore team.\n\n### Licence\n\nMIT',
16 silly publish   readmeFilename: 'readme.md',
16 silly publish   gitHead: 'c5280ec3197caaed57132637e0b527b191095d4e',
16 silly publish   bugs: { url: 'https://github.com/caljrimmer/require-backbone-view-mock/issues' },
16 silly publish   homepage: 'https://github.com/caljrimmer/require-backbone-view-mock',
16 silly publish   _id: 'rbmv@0.0.5',
16 silly publish   scripts: {},
16 silly publish   _shasum: '7b14e209f2b032aea3f5d3d1cc7bc917a79777ba',
16 silly publish   _from: '.' }
17 verbose mapToRegistry name rbmv
18 verbose mapToRegistry uri https://registry.npmjs.org/rbmv
19 verbose publish registryBase https://registry.npmjs.org/
20 verbose request on initialization, where is /rbmv
21 verbose request after pass 1, where is /rbmv
22 verbose request url raw /rbmv
23 verbose request resolving registry [ 'https://registry.npmjs.org/', './rbmv' ]
24 verbose request after pass 2, where is https://registry.npmjs.org/rbmv
25 verbose request sending authorization for write operation
26 info attempt registry request try #1 at 16:30:15
27 verbose request id a0567e1b9c9d0d05
28 http request PUT https://registry.npmjs.org/rbmv
29 http 403 https://registry.npmjs.org/rbmv
30 verbose headers { date: 'Thu, 05 Feb 2015 16:30:26 GMT',
30 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
30 verbose headers   'content-type': 'application/json',
30 verbose headers   'cache-control': 'max-age=60',
30 verbose headers   'content-length': '5760',
30 verbose headers   'accept-ranges': 'bytes',
30 verbose headers   via: '1.1 varnish',
30 verbose headers   'x-served-by': 'cache-ams4129-AMS',
30 verbose headers   'x-cache': 'MISS',
30 verbose headers   'x-cache-hits': '0',
30 verbose headers   'x-timer': 'S1423153825.848910,VS0,VE312',
30 verbose headers   'keep-alive': 'timeout=10, max=50',
30 verbose headers   connection: 'Keep-Alive' }
31 error publish Failed PUT 403
32 verbose stack Error: forbidden cannot modify pre-existing version: 0.0.5
32 verbose stack old={"name":"rbmv","description":"Mocks requirejs dependencies for backbone views and returns an instantiated backbone view with all methods public for unit testing","keywords":["require","mock","backbone"],"dependencies":{"fs":"*"},"author":{"name":"Callum Rimmer","email":"callum@deadtrendy.co.uk"},"repository":{"type":"git","url":"https://github.com/caljrimmer/require-backbone-view-mock.git"},"main":"src/require-mock.js","version":"0.0.5","license":"MIT","gitHead":"119031356164087defde5c923a29cba635a1ae12","bugs":{"url":"https://github.com/caljrimmer/require-backbone-view-mock/issues"},"homepage":"https://github.com/caljrimmer/require-backbone-view-mock","_id":"rbmv@0.0.5","scripts":{},"_shasum":"eb81e7eb719bbd30b3b4144b567f734c5581273b","_from":".","_npmVersion":"2.1.6","_nodeVersion":"0.10.32","_npmUser":{"name":"caljrimmer","email":"callum@deadtrendy.co.uk"},"maintainers":[{"name":"caljrimmer","email":"callum@deadtrendy.co.uk"}],"dist":{"shasum":"eb81e7eb719bbd30b3b4144b567f734c5581273b","tarball":"http://registry.npmjs.org/rbmv/-/rbmv-0.0.5.tgz"}}
32 verbose stack new={"name":"rbmv","description":"Mocks requirejs dependencies for backbone views and returns an instantiated backbone view with all methods public for unit testing","keywords":["require","mock","backbone"],"dependencies":{"fs":"*"},"author":{"name":"Callum Rimmer","email":"callum@deadtrendy.co.uk"},"repository":{"type":"git","url":"https://github.com/caljrimmer/require-backbone-view-mock.git"},"main":"src/require-mock.js","version":"0.0.5","license":"MIT","readme":"# RBMV\u000a\u000aRBMV is a dependency injector for require.js users to make Backbone views easy to unit test.\u000a\u000a## Installation\u000a\u000a```\u000anpm install rbmv\u000a```\u000a\u000a## API\u000a\u000a### constructor\u000a\u000aFirst you have to require RBMV. The rest of the documentation will assume you already loaded RBMV as a module dependency.\u000a\u000a#### Default Configuration\u000a\u000a```javascript\u000a  var rbmv = require(\"rbmv\");\u000a```\u000a\u000a### rbmv(url,dependencies)\u000a \u000awithout defined dependencies  \u000a               \u000a```javascript\u000avar rbmv = require(\"rbmv\"); \u000avar mockedView = rbmv(__dirname + \"path/to/view\");\u000a```\u000a\u000awith defined dependencies\u000a\u000a```javascript\u000avar rbmv = require(\"rbmv\"); \u000a\u000avar mockedView = rbmv(__dirname + \"path/to/view\",{\u000a   _ : require(\"path/to/underscore\"),\u000a   custom : {\u000a     method : function(arg){\u000a       return args;\u000a     }  \u000a   } \u000a});\u000a``` \u000a\u000aDependencies are optional. If any dependencies are missing then rbmv creates dummy objects with an extend method. \u000a\u000a### Full Example  \u000a        \u000aBackbone View with requirejs module dependencies\u000a\u000a```javascript\u000adefine([\u000a  \"modules/common/views/baseview\",\u000a  \"modules/common/utils\",\u000a  \"templates/list\"\u000a  \"underscore\"\u000a  ],\u000a  function (BaseView, utils, list, _) {\u000a\u000a  return BaseView.extend({\u000a\u000a    template: _.template(list),\u000a\u000a    initialize : function () {},\u000a\u000a\u0009controllerParse : function(data){\u000a\u0009\u0009_.each(data,function(v,k){\u000a\u0009\u0009\u0009v.looped = true;\u000a\u0009\u0009});\u000a\u0009\u0009return data;\u000a\u0009},\u000a\u0009\u000a\u0009render :function(){\u000a\u0009\u0009this.$el.html(this.template(this.controllerParse(this.collection.toJSON())))\u000a\u0009}\u000a\u0009  \u000a});\u000a``` \u000a\u000aIn this view, you would like to test the method controllerParse. You want to instantiate the view without worrying about the dependencies. This view is only dependent on underscore and the template to instantiate. We pass in a mock template and underscore.\u000a\u000a\u000a```javascript\u000avar rbmv = require(\"rbmv\"); \u000avar mockedView = rbmv(__dirname + \"path/to/view\",{ \u000a  list : \"<div></div>\",  \u000a   _ : require(\"underscore\")\u000a});                        \u000a\u000avar mockData = [{name:'one'},{name:'two'}];\u000avar result = mockedView.controllerParse(mockData);\u000a//result is [{name:'one',looped:true},{name:'two',looped:true}]\u000a\u000a``` \u000a\u000aYou can use rbmv to create a view as a testable object and have access to all the defined methods within the view. Note that we injected underscore and the template as a dependencies with the same name as the arguments in the view i.e. _ and list   \u000a    \u000a### Credit \u000a\u000aI have used the underscore extend method so thanks to the underscore team.\u000a\u000a### Licence\u000a\u000aMIT","readmeFilename":"readme.md","gitHead":"c5280ec3197caaed57132637e0b527b191095d4e","bugs":{"url":"https://github.com/caljrimmer/require-backbone-view-mock/issues"},"homepage":"https://github.com/caljrimmer/require-backbone-view-mock","_id":"rbmv@0.0.5","scripts":{},"_shasum":"7b14e209f2b032aea3f5d3d1cc7bc917a79777ba","_from":".","_npmVersion":"2.1.6","_nodeVersion":"0.10.32","_npmUser":{"name":"caljrimmer","email":"callum@deadtrendy.co.uk"},"maintainers":[{"name":"caljrimmer","email":"callum@deadtrendy.co.uk"}],"dist":{"shasum":"7b14e209f2b032aea3f5d3d1cc7bc917a79777ba","tarball":"http://registry.npmjs.org/rbmv/-/rbmv-0.0.5.tgz"}}: rbmv
32 verbose stack     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:260:14)
32 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:197:65)
32 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:364:22)
32 verbose stack     at Request.emit (events.js:98:17)
32 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1318:14)
32 verbose stack     at Request.emit (events.js:117:20)
32 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1266:12)
32 verbose stack     at IncomingMessage.emit (events.js:117:20)
32 verbose stack     at _stream_readable.js:943:16
32 verbose stack     at process._tickCallback (node.js:419:13)
33 verbose statusCode 403
34 verbose pkgid rbmv
35 verbose cwd /Applications/MAMP/htdocs/backbone-view-mock
36 error Darwin 13.4.0
37 error argv "node" "/usr/local/bin/npm" "publish" "./"
38 error node v0.10.32
39 error npm  v2.1.6
40 error code E403
41 error forbidden cannot modify pre-existing version: 0.0.5
41 error old={"name":"rbmv","description":"Mocks requirejs dependencies for backbone views and returns an instantiated backbone view with all methods public for unit testing","keywords":["require","mock","backbone"],"dependencies":{"fs":"*"},"author":{"name":"Callum Rimmer","email":"callum@deadtrendy.co.uk"},"repository":{"type":"git","url":"https://github.com/caljrimmer/require-backbone-view-mock.git"},"main":"src/require-mock.js","version":"0.0.5","license":"MIT","gitHead":"119031356164087defde5c923a29cba635a1ae12","bugs":{"url":"https://github.com/caljrimmer/require-backbone-view-mock/issues"},"homepage":"https://github.com/caljrimmer/require-backbone-view-mock","_id":"rbmv@0.0.5","scripts":{},"_shasum":"eb81e7eb719bbd30b3b4144b567f734c5581273b","_from":".","_npmVersion":"2.1.6","_nodeVersion":"0.10.32","_npmUser":{"name":"caljrimmer","email":"callum@deadtrendy.co.uk"},"maintainers":[{"name":"caljrimmer","email":"callum@deadtrendy.co.uk"}],"dist":{"shasum":"eb81e7eb719bbd30b3b4144b567f734c5581273b","tarball":"http://registry.npmjs.org/rbmv/-/rbmv-0.0.5.tgz"}}
41 error new={"name":"rbmv","description":"Mocks requirejs dependencies for backbone views and returns an instantiated backbone view with all methods public for unit testing","keywords":["require","mock","backbone"],"dependencies":{"fs":"*"},"author":{"name":"Callum Rimmer","email":"callum@deadtrendy.co.uk"},"repository":{"type":"git","url":"https://github.com/caljrimmer/require-backbone-view-mock.git"},"main":"src/require-mock.js","version":"0.0.5","license":"MIT","readme":"# RBMV\u000a\u000aRBMV is a dependency injector for require.js users to make Backbone views easy to unit test.\u000a\u000a## Installation\u000a\u000a```\u000anpm install rbmv\u000a```\u000a\u000a## API\u000a\u000a### constructor\u000a\u000aFirst you have to require RBMV. The rest of the documentation will assume you already loaded RBMV as a module dependency.\u000a\u000a#### Default Configuration\u000a\u000a```javascript\u000a  var rbmv = require(\"rbmv\");\u000a```\u000a\u000a### rbmv(url,dependencies)\u000a \u000awithout defined dependencies  \u000a               \u000a```javascript\u000avar rbmv = require(\"rbmv\"); \u000avar mockedView = rbmv(__dirname + \"path/to/view\");\u000a```\u000a\u000awith defined dependencies\u000a\u000a```javascript\u000avar rbmv = require(\"rbmv\"); \u000a\u000avar mockedView = rbmv(__dirname + \"path/to/view\",{\u000a   _ : require(\"path/to/underscore\"),\u000a   custom : {\u000a     method : function(arg){\u000a       return args;\u000a     }  \u000a   } \u000a});\u000a``` \u000a\u000aDependencies are optional. If any dependencies are missing then rbmv creates dummy objects with an extend method. \u000a\u000a### Full Example  \u000a        \u000aBackbone View with requirejs module dependencies\u000a\u000a```javascript\u000adefine([\u000a  \"modules/common/views/baseview\",\u000a  \"modules/common/utils\",\u000a  \"templates/list\"\u000a  \"underscore\"\u000a  ],\u000a  function (BaseView, utils, list, _) {\u000a\u000a  return BaseView.extend({\u000a\u000a    template: _.template(list),\u000a\u000a    initialize : function () {},\u000a\u000a\u0009controllerParse : function(data){\u000a\u0009\u0009_.each(data,function(v,k){\u000a\u0009\u0009\u0009v.looped = true;\u000a\u0009\u0009});\u000a\u0009\u0009return data;\u000a\u0009},\u000a\u0009\u000a\u0009render :function(){\u000a\u0009\u0009this.$el.html(this.template(this.controllerParse(this.collection.toJSON())))\u000a\u0009}\u000a\u0009  \u000a});\u000a``` \u000a\u000aIn this view, you would like to test the method controllerParse. You want to instantiate the view without worrying about the dependencies. This view is only dependent on underscore and the template to instantiate. We pass in a mock template and underscore.\u000a\u000a\u000a```javascript\u000avar rbmv = require(\"rbmv\"); \u000avar mockedView = rbmv(__dirname + \"path/to/view\",{ \u000a  list : \"<div></div>\",  \u000a   _ : require(\"underscore\")\u000a});                        \u000a\u000avar mockData = [{name:'one'},{name:'two'}];\u000avar result = mockedView.controllerParse(mockData);\u000a//result is [{name:'one',looped:true},{name:'two',looped:true}]\u000a\u000a``` \u000a\u000aYou can use rbmv to create a view as a testable object and have access to all the defined methods within the view. Note that we injected underscore and the template as a dependencies with the same name as the arguments in the view i.e. _ and list   \u000a    \u000a### Credit \u000a\u000aI have used the underscore extend method so thanks to the underscore team.\u000a\u000a### Licence\u000a\u000aMIT","readmeFilename":"readme.md","gitHead":"c5280ec3197caaed57132637e0b527b191095d4e","bugs":{"url":"https://github.com/caljrimmer/require-backbone-view-mock/issues"},"homepage":"https://github.com/caljrimmer/require-backbone-view-mock","_id":"rbmv@0.0.5","scripts":{},"_shasum":"7b14e209f2b032aea3f5d3d1cc7bc917a79777ba","_from":".","_npmVersion":"2.1.6","_nodeVersion":"0.10.32","_npmUser":{"name":"caljrimmer","email":"callum@deadtrendy.co.uk"},"maintainers":[{"name":"caljrimmer","email":"callum@deadtrendy.co.uk"}],"dist":{"shasum":"7b14e209f2b032aea3f5d3d1cc7bc917a79777ba","tarball":"http://registry.npmjs.org/rbmv/-/rbmv-0.0.5.tgz"}}: rbmv
42 error If you need help, you may report this error at:
42 error     <http://github.com/npm/npm/issues>
43 verbose exit [ 1, true ]
